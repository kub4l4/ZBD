{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass FocusGlobal {\n  constructor() {\n    this.visible = false;\n  }\n  setVisible(visible) {\n    this.visible = visible;\n  }\n}\n/**\n * This object can be overwritten by the `setup()` function to use a different\n * focus coordination object.\n */\nlet focusObject = new FocusGlobal();\n/**\n * Set of keyboard event codes that correspond to keyboard navigation\n */\nconst KEYBOARD_NAVIGATION_KEYS = new Set(['Tab', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown']);\nfunction keydownHandler(e) {\n  if (KEYBOARD_NAVIGATION_KEYS.has(e.key)) {\n    focusObject.setVisible(true);\n  }\n}\n/**\n * Set up integration with alternate global focus tracking object\n *\n * @param focusGlobal A global focus object to coordinate between multiple\n *     systems\n * @param enableKeydownHandler Set to true to let StrongFocusService listen for\n *     keyboard navigation\n */\nexport function setup(focusGlobal) {\n  let enableKeydownHandler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  focusObject = focusGlobal;\n  if (enableKeydownHandler) {\n    window.addEventListener('keydown', keydownHandler);\n  } else {\n    window.removeEventListener('keydown', keydownHandler);\n  }\n}\n/**\n * Setting for always showing strong focus\n *\n * Defaults to false, controlled by `setForceStrongFocus`\n */\nlet alwaysStrong = false;\n/**\n * Returns `true` if the component should show strong focus.\n *\n * By default, strong focus is shown only on keyboard navigation, and not on\n * pointer interaction.\n */\nexport function shouldShowStrongFocus() {\n  return alwaysStrong || focusObject.visible;\n}\n/**\n * Control if strong focus should always be shown on component focus\n *\n * Defaults to `false`\n *\n * @param force Forces strong focus on the page. Disables strong focus if false.\n */\nexport function setForceStrongFocus(force) {\n  alwaysStrong = force;\n}\n/**\n * If `true`, strong focus is always shown\n */\nexport function isStrongFocusForced() {\n  return alwaysStrong;\n}\n/**\n * Components should call this when a user interacts with a component with a\n * pointing device.\n *\n * By default, this will prevent the strong focus from being shown.\n */\nexport function pointerPress() {\n  focusObject.setVisible(false);\n}\nsetup(focusObject, true);","map":{"version":3,"mappings":"AAAA;;;;;AAWA,MAAMA,WAAW;EAAjBC;IACE,YAAO,GAAG,KAAK;EAIjB;EAHEC,UAAU,CAACC,OAAgB;IACzB,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;;AAGF;;;;AAIA,IAAIC,WAAW,GAAgB,IAAIJ,WAAW,EAAE;AAEhD;;;AAGA,MAAMK,wBAAwB,GAC1B,IAAIC,GAAG,CAAC,CAAC,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;AAEvE,SAASC,cAAc,CAACC,CAAgB;EACtC,IAAIH,wBAAwB,CAACI,GAAG,CAACD,CAAC,CAACE,GAAG,CAAC,EAAE;IACvCN,WAAW,CAACF,UAAU,CAAC,IAAI,CAAC;;AAEhC;AAEA;;;;;;;;AAQA,OAAM,SAAUS,KAAK,CAACC,WAAwB,EAA8B;EAAA,IAA5BC,oBAAoB,uEAAG,KAAK;EAC1ET,WAAW,GAAGQ,WAAW;EACzB,IAAIC,oBAAoB,EAAE;IACxBC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAER,cAAc,CAAC;GACnD,MAAM;IACLO,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAET,cAAc,CAAC;;AAEzD;AAEA;;;;;AAKA,IAAIU,YAAY,GAAG,KAAK;AAExB;;;;;;AAMA,OAAM,SAAUC,qBAAqB;EACnC,OAAOD,YAAY,IAAIb,WAAW,CAACD,OAAO;AAC5C;AAEA;;;;;;;AAOA,OAAM,SAAUgB,mBAAmB,CAACC,KAAc;EAChDH,YAAY,GAAGG,KAAK;AACtB;AAEA;;;AAGA,OAAM,SAAUC,mBAAmB;EACjC,OAAOJ,YAAY;AACrB;AAEA;;;;;;AAMA,OAAM,SAAUK,YAAY;EAC1BlB,WAAW,CAACF,UAAU,CAAC,KAAK,CAAC;AAC/B;AAEAS,KAAK,CAACP,WAAW,EAAE,IAAI,CAAC","names":["FocusGlobal","constructor","setVisible","visible","focusObject","KEYBOARD_NAVIGATION_KEYS","Set","keydownHandler","e","has","key","setup","focusGlobal","enableKeydownHandler","window","addEventListener","removeEventListener","alwaysStrong","shouldShowStrongFocus","setForceStrongFocus","force","isStrongFocusForced","pointerPress"],"sources":["C:\\Users\\macie\\IdeaProjects\\ztbd\\node_modules\\@material\\web\\focus\\strong-focus.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\ninterface StrongFocus {\n  visible: boolean;\n  setVisible(visible: boolean): void;\n}\n\nclass FocusGlobal implements StrongFocus {\n  visible = false;\n  setVisible(visible: boolean) {\n    this.visible = visible;\n  }\n}\n\n/**\n * This object can be overwritten by the `setup()` function to use a different\n * focus coordination object.\n */\nlet focusObject: StrongFocus = new FocusGlobal();\n\n/**\n * Set of keyboard event codes that correspond to keyboard navigation\n */\nconst KEYBOARD_NAVIGATION_KEYS =\n    new Set(['Tab', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown']);\n\nfunction keydownHandler(e: KeyboardEvent) {\n  if (KEYBOARD_NAVIGATION_KEYS.has(e.key)) {\n    focusObject.setVisible(true);\n  }\n}\n\n/**\n * Set up integration with alternate global focus tracking object\n *\n * @param focusGlobal A global focus object to coordinate between multiple\n *     systems\n * @param enableKeydownHandler Set to true to let StrongFocusService listen for\n *     keyboard navigation\n */\nexport function setup(focusGlobal: StrongFocus, enableKeydownHandler = false) {\n  focusObject = focusGlobal;\n  if (enableKeydownHandler) {\n    window.addEventListener('keydown', keydownHandler);\n  } else {\n    window.removeEventListener('keydown', keydownHandler);\n  }\n}\n\n/**\n * Setting for always showing strong focus\n *\n * Defaults to false, controlled by `setForceStrongFocus`\n */\nlet alwaysStrong = false;\n\n/**\n * Returns `true` if the component should show strong focus.\n *\n * By default, strong focus is shown only on keyboard navigation, and not on\n * pointer interaction.\n */\nexport function shouldShowStrongFocus() {\n  return alwaysStrong || focusObject.visible;\n}\n\n/**\n * Control if strong focus should always be shown on component focus\n *\n * Defaults to `false`\n *\n * @param force Forces strong focus on the page. Disables strong focus if false.\n */\nexport function setForceStrongFocus(force: boolean) {\n  alwaysStrong = force;\n}\n\n/**\n * If `true`, strong focus is always shown\n */\nexport function isStrongFocusForced() {\n  return alwaysStrong;\n}\n\n/**\n * Components should call this when a user interacts with a component with a\n * pointing device.\n *\n * By default, this will prevent the strong focus from being shown.\n */\nexport function pointerPress() {\n  focusObject.setVisible(false);\n}\n\nsetup(focusObject, true);"]},"metadata":{},"sourceType":"module","externalDependencies":[]}