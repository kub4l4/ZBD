{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nexport function bound(target, propertyKey, methodDescriptor) {\n  const descriptor = methodDescriptor || {\n    configurable: true,\n    enumerable: true,\n    writable: true\n  };\n  const memoizedBoundValues = new WeakMap();\n  let get;\n  let set;\n  if (descriptor.get || descriptor.writable) {\n    get = function () {\n      const self = this; // Needed for closure conformance\n      if (descriptor.get) {\n        // Separate variables needed for closure conformance\n        const getter = descriptor.get;\n        const value = getter.call(self);\n        return value.bind(self);\n      }\n      if (!memoizedBoundValues.has(self)) {\n        const bound = (descriptor.value || self[propertyKey])?.bind(self);\n        memoizedBoundValues.set(self, bound);\n        return bound;\n      }\n      return memoizedBoundValues.get(self);\n    };\n  }\n  if (descriptor.set || descriptor.writable) {\n    set = function (value) {\n      const self = this; // Needed for closure conformance\n      value = value.bind(self);\n      if (descriptor.set) {\n        descriptor.set.call(self, value);\n      }\n      memoizedBoundValues.set(self, value);\n    };\n  }\n  return {\n    get,\n    set,\n    configurable: descriptor.configurable,\n    enumerable: descriptor.enumerable\n  };\n}","map":{"version":3,"mappings":"AAAA;;;;;AA6CA,OAAM,SACNA,KAAK,CACDC,MAAS,EAAEC,WAAc,EAAEC,gBAA6C;EAE1E,MAAMC,UAAU,GAA+BD,gBAAgB,IAAI;IACjEE,YAAY,EAAE,IAAI;IAClBC,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE;GACX;EAED,MAAMC,mBAAmB,GAAG,IAAIC,OAAO,EAAa;EACpD,IAAIC,GAAgD;EACpD,IAAIC,GAAgD;EAEpD,IAAIP,UAAU,CAACM,GAAG,IAAIN,UAAU,CAACG,QAAQ,EAAE;IACzCG,GAAG,GAAG;MACJ,MAAME,IAAI,GAAG,IAAS,CAAC,CAAE;MACzB,IAAIR,UAAU,CAACM,GAAG,EAAE;QAClB;QACA,MAAMG,MAAM,GAAGT,UAAU,CAACM,GAAG;QAC7B,MAAMI,KAAK,GAAGD,MAAM,CAACE,IAAI,CAACH,IAAI,CAAC;QAC/B,OAAOE,KAAK,CAACE,IAAI,CAACJ,IAAI,CAAC;;MAGzB,IAAI,CAACJ,mBAAmB,CAACS,GAAG,CAACL,IAAI,CAAC,EAAE;QAClC,MAAMZ,KAAK,GACP,CAACI,UAAU,CAACU,KAAK,IAAIF,IAAI,CAACV,WAAW,CAAM,GAAGc,IAAI,CAACJ,IAAI,CAAM;QACjEJ,mBAAmB,CAACG,GAAG,CAACC,IAAI,EAAEZ,KAAK,CAAC;QACpC,OAAOA,KAAK;;MAGd,OAAOQ,mBAAmB,CAACE,GAAG,CAACE,IAAI,CAAE;IACvC,CAAC;;EAGH,IAAIR,UAAU,CAACO,GAAG,IAAIP,UAAU,CAACG,QAAQ,EAAE;IACzCI,GAAG,GAAG,UAAkBG,KAAQ;MAC9B,MAAMF,IAAI,GAAG,IAAS,CAAC,CAAE;MACzBE,KAAK,GAAGA,KAAK,CAACE,IAAI,CAACJ,IAAI,CAAC;MACxB,IAAIR,UAAU,CAACO,GAAG,EAAE;QAClBP,UAAU,CAACO,GAAG,CAACI,IAAI,CAACH,IAAI,EAAEE,KAAK,CAAC;;MAGlCN,mBAAmB,CAACG,GAAG,CAACC,IAAI,EAAEE,KAAK,CAAC;IACtC,CAAC;;EAGH,OAAO;IACLJ,GAAG;IACHC,GAAG;IACHN,YAAY,EAAED,UAAU,CAACC,YAAY;IACrCC,UAAU,EAAEF,UAAU,CAACE;GACxB;AACH","names":["bound","target","propertyKey","methodDescriptor","descriptor","configurable","enumerable","writable","memoizedBoundValues","WeakMap","get","set","self","getter","value","call","bind","has"],"sources":["C:\\Users\\macie\\IdeaProjects\\ztbd\\node_modules\\@material\\web\\decorators\\bound.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {FunctionKeys} from '../types/keys.js';\n\n/**\n * Binds a class's method to its instance.\n *\n * @example\n * class MyClass {\n *   \\@bound\n *   foo() { return this; }\n * }\n *\n * const instance = new MyClass();\n * const reference = instance.foo;\n * foo(); // MyClass\n *\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function bound<V extends Function>(\n    target: object, propertyKey: string|symbol,\n    methodDescriptor: TypedPropertyDescriptor<V>): TypedPropertyDescriptor<V>;\n/**\n * Binds a class's function property to its instance.\n *\n * @example\n * class MyClass {\n *   \\@bound\n *   foo = function(this: MyClass) { return this; }\n * }\n *\n * const instance = new MyClass();\n * const reference = instance.foo;\n * foo(); // MyClass\n *\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function bound<T extends object>(\n    target: T, propertyKey: FunctionKeys<T>): any;\nexport function\nbound<T extends object, K extends FunctionKeys<T>, V extends T[K]&Function>(\n    target: T, propertyKey: K, methodDescriptor?: TypedPropertyDescriptor<V>):\n    TypedPropertyDescriptor<V> {\n  const descriptor: TypedPropertyDescriptor<V> = methodDescriptor || {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n  };\n\n  const memoizedBoundValues = new WeakMap<object, V>();\n  let get: TypedPropertyDescriptor<V>['get']|undefined;\n  let set: TypedPropertyDescriptor<V>['set']|undefined;\n\n  if (descriptor.get || descriptor.writable) {\n    get = function(this: T): V {\n      const self = this as T;  // Needed for closure conformance\n      if (descriptor.get) {\n        // Separate variables needed for closure conformance\n        const getter = descriptor.get;\n        const value = getter.call(self);\n        return value.bind(self);\n      }\n\n      if (!memoizedBoundValues.has(self)) {\n        const bound =\n            (descriptor.value || self[propertyKey] as V)?.bind(self) as V;\n        memoizedBoundValues.set(self, bound);\n        return bound;\n      }\n\n      return memoizedBoundValues.get(self)!;\n    };\n  }\n\n  if (descriptor.set || descriptor.writable) {\n    set = function(this: T, value: V) {\n      const self = this as T;  // Needed for closure conformance\n      value = value.bind(self);\n      if (descriptor.set) {\n        descriptor.set.call(self, value);\n      }\n\n      memoizedBoundValues.set(self, value);\n    };\n  }\n\n  return {\n    get,\n    set,\n    configurable: descriptor.configurable,\n    enumerable: descriptor.enumerable,\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}