{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\macie\\\\IdeaProjects\\\\ztbd\\\\src\\\\components\\\\RadioConfigGroup.tsx\",\n  _s = $RefreshSig$();\nimport { FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport '../styles/components.css';\nimport { RadioType } from \"../objects/enums/RadioType\";\nimport { getTextsByType, getTitleByType } from \"../helpers/uiHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RadioConfigGroup = _ref => {\n  _s();\n  let {\n    radioType,\n    value,\n    setValue\n  } = _ref;\n  const [texts] = useState(getTextsByType(radioType));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"radio-title\",\n      children: getTitleByType(radioType)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      value: value,\n      onChange: event => {\n        event.persist();\n        setValue(event.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: radioType !== RadioType.QUANTITY ? '0' : '10',\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 98\n        }, this),\n        label: texts[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: radioType !== RadioType.QUANTITY ? '1' : '100',\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 99\n        }, this),\n        label: texts[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: radioType !== RadioType.QUANTITY ? '2' : '1000',\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 100\n        }, this),\n        label: texts[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: radioType !== RadioType.QUANTITY ? '3' : '10000',\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 101\n        }, this),\n        label: texts[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(RadioConfigGroup, \"5NnNazYSta+tnpi6EMMWglXyx50=\");\n_c = RadioConfigGroup;\nexport default RadioConfigGroup;\nvar _c;\n$RefreshReg$(_c, \"RadioConfigGroup\");","map":{"version":3,"names":["FormControlLabel","Radio","RadioGroup","React","useState","RadioType","getTextsByType","getTitleByType","RadioConfigGroup","radioType","value","setValue","texts","event","persist","target","QUANTITY"],"sources":["C:/Users/macie/IdeaProjects/ztbd/src/components/RadioConfigGroup.tsx"],"sourcesContent":["import {FormControlLabel, Radio, RadioGroup} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport '../styles/components.css';\r\nimport {RadioType} from \"../objects/enums/RadioType\";\r\nimport {getTextsByType, getTitleByType} from \"../helpers/uiHelper\";\r\n\r\n\r\nexport interface RadioConfigGroupProps {\r\n    radioType: RadioType,\r\n    value: string,\r\n    setValue: (arg: any) => void,\r\n}\r\n\r\nconst RadioConfigGroup = ({radioType, value, setValue}: RadioConfigGroupProps) => {\r\n    const [texts] = useState<string[]>(getTextsByType(radioType));\r\n\r\n    return (\r\n        <div>\r\n            <p className='radio-title'>{getTitleByType(radioType)}</p>\r\n            <RadioGroup value={value} onChange={(event) => {\r\n                event.persist();\r\n                setValue(event.target.value)\r\n            }}>\r\n                <FormControlLabel value={radioType !== RadioType.QUANTITY ? '0' : '10'} control={<Radio/>}\r\n                                  label={texts[0]}/>\r\n                <FormControlLabel value={radioType !== RadioType.QUANTITY ? '1' : '100'} control={<Radio/>}\r\n                                  label={texts[1]}/>\r\n                <FormControlLabel value={radioType !== RadioType.QUANTITY ? '2' : '1000'} control={<Radio/>}\r\n                                  label={texts[2]}/>\r\n                <FormControlLabel value={radioType !== RadioType.QUANTITY ? '3' : '10000'} control={<Radio/>}\r\n                                  label={texts[3]}/>\r\n            </RadioGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RadioConfigGroup;"],"mappings":";;AAAA,SAAQA,gBAAgB,EAAEC,KAAK,EAAEC,UAAU,QAAO,mBAAmB;AACrE,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,0BAA0B;AACjC,SAAQC,SAAS,QAAO,4BAA4B;AACpD,SAAQC,cAAc,EAAEC,cAAc,QAAO,qBAAqB;AAAC;AASnE,MAAMC,gBAAgB,GAAG,QAAyD;EAAA;EAAA,IAAxD;IAACC,SAAS;IAAEC,KAAK;IAAEC;EAA+B,CAAC;EACzE,MAAM,CAACC,KAAK,CAAC,GAAGR,QAAQ,CAAWE,cAAc,CAACG,SAAS,CAAC,CAAC;EAE7D,oBACI;IAAA,wBACI;MAAG,SAAS,EAAC,aAAa;MAAA,UAAEF,cAAc,CAACE,SAAS;IAAC;MAAA;MAAA;MAAA;IAAA,QAAK,eAC1D,QAAC,UAAU;MAAC,KAAK,EAAEC,KAAM;MAAC,QAAQ,EAAGG,KAAK,IAAK;QAC3CA,KAAK,CAACC,OAAO,EAAE;QACfH,QAAQ,CAACE,KAAK,CAACE,MAAM,CAACL,KAAK,CAAC;MAChC,CAAE;MAAA,wBACE,QAAC,gBAAgB;QAAC,KAAK,EAAED,SAAS,KAAKJ,SAAS,CAACW,QAAQ,GAAG,GAAG,GAAG,IAAK;QAAC,OAAO,eAAE,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA,QAAG;QACxE,KAAK,EAAEJ,KAAK,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eACpC,QAAC,gBAAgB;QAAC,KAAK,EAAEH,SAAS,KAAKJ,SAAS,CAACW,QAAQ,GAAG,GAAG,GAAG,KAAM;QAAC,OAAO,eAAE,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA,QAAG;QACzE,KAAK,EAAEJ,KAAK,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eACpC,QAAC,gBAAgB;QAAC,KAAK,EAAEH,SAAS,KAAKJ,SAAS,CAACW,QAAQ,GAAG,GAAG,GAAG,MAAO;QAAC,OAAO,eAAE,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA,QAAG;QAC1E,KAAK,EAAEJ,KAAK,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eACpC,QAAC,gBAAgB;QAAC,KAAK,EAAEH,SAAS,KAAKJ,SAAS,CAACW,QAAQ,GAAG,GAAG,GAAG,OAAQ;QAAC,OAAO,eAAE,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA,QAAG;QAC3E,KAAK,EAAEJ,KAAK,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3B;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;AAEd,CAAC;AAAA,GArBKJ,gBAAgB;AAAA,KAAhBA,gBAAgB;AAuBtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}