{"ast":null,"code":"/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Returns true if the element is a form associated custom element (FACE).\n */\nexport function isFormAssociated(element) {\n  return element.constructor.formAssociated;\n}","map":{"version":3,"mappings":"AAAA;;;;;AAgBA;;;AAGA,OAAM,SAAUA,gBAAgB,CAACC,OAA8B;EAC7D,OAAQA,OAAO,CAACC,WAA4C,CAACC,cAAc;AAC7E","names":["isFormAssociated","element","constructor","formAssociated"],"sources":["C:\\Users\\macie\\IdeaProjects\\ztbd\\node_modules\\@material\\web\\controller\\form-associated.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * FormAssociatedElement interface\n */\nexport interface FormAssociatedElement extends HTMLElement {}\n\ndeclare var FormAssociatedElement: {\n  new (): FormAssociatedElement; prototype: FormAssociatedElement;\n  readonly formAssociated?: boolean;\n};\n\n/**\n * Returns true if the element is a form associated custom element (FACE).\n */\nexport function isFormAssociated(element: FormAssociatedElement) {\n  return (element.constructor as typeof FormAssociatedElement).formAssociated;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}